/*---------------------------------------------------------------------------*\

    HiSA: High Speed Aerodynamic solver

    Copyright (C) 2023 Oliver Oxtoby

-------------------------------------------------------------------------------
License
    This file is part of HiSA.

    HiSA is free software: you can redistribute it and/or modify it
    under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    HiSA is distributed in the hope that it will be useful, but WITHOUT
    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
    for more details.

    You should have received a copy of the GNU General Public License
    along with HiSA.  If not, see <http://www.gnu.org/licenses/>.

Class
    Foam::fvMeshTopoChangers::rebalancableRefiner

Description
    This is a simple wrapper around Foam::fvMeshTopoChangers::refiner to
    fix a bug where the protectedCells_ list is not redistributed. To be 
    used with a distributor for load rebalancing.

    Replaces the standard version in run-time selection tables, so no change
    is required in the input.

Usage
    Please see fvMeshTopoChangersRefiner.H in OpenFOAM Foundation version

SourceFiles
    fvMeshTopoChangersrebalancableRefiner.C

See Also
    Foam::fvMeshTopoChangers::refiner

\*---------------------------------------------------------------------------*/

#ifndef fvMeshTopoChangersrebalancableRefiner_H
#define fvMeshTopoChangersrebalancableRefiner_H

#if FOUNDATION >= 10

#include "fvMeshTopoChangersRefiner.H"

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

namespace Foam
{
namespace fvMeshTopoChangers
{

/*---------------------------------------------------------------------------*\
                 Class fvMeshTopoChangers::rebalancableRefiner Declaration
\*---------------------------------------------------------------------------*/

class rebalancableRefiner
:
    public refiner
{
private:

    dictionary dict_;

    //- Select points that can be unrefined.
    virtual labelList selectUnrefinePoints
    (
        const PackedBoolList& markedCell
    ) const;

public:

    //- Runtime type information
    TypeName("refiner");


    // Constructors

        //- Construct from fvMesh and dictionary
        rebalancableRefiner(fvMesh& mesh, const dictionary& dict);

        //- Disallow default bitwise copy construction
        rebalancableRefiner(const rebalancableRefiner&) = delete;


    //- Destructor
    virtual ~rebalancableRefiner();


    // Member Functions

        //- Update corresponding to the given distribution map
        virtual void distribute(const polyDistributionMap&) override;
};


// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

} // End namespace fvMeshTopoChangers
} // End namespace Foam

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

#endif

#endif

// ************************************************************************* //
